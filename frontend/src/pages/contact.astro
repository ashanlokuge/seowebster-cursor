---
import { getEntry } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

const page = await getEntry('pages', 'contact');
if (!page) {
  throw new Error('Contact page content not found');
}

const { hero, contact_info, form } = page.data;

interface ContactInfo {
  type: string;
  icon: string;
  title: string;
  value: string;
}

interface FormField {
  name: string;
  label: string;
  type: string;
  required: boolean;
  placeholder?: string;
}

interface ContactForm {
  title: string;
  fields: FormField[];
  submit_button: string;
}

const typedForm = form as ContactForm;
---

<BaseLayout title={page.data.title} description={page.data.description}>
  <section class="py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl font-bold mb-6">{hero?.title}</h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          {hero?.description}
        </p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <div>
          <h2 class="text-2xl font-bold mb-6">Get In Touch</h2>
          <div class="space-y-6">
            {contact_info?.map((info: ContactInfo) => (
              <div class="flex items-start">
                <div class="bg-blue-100 rounded-full p-3 mr-4">
                  <span class="text-xl">{info.icon}</span>
                </div>
                <div>
                  <h3 class="font-semibold text-lg">{info.title}</h3>
                  <p class="text-gray-600" set:html={info.value.replace('\n', '<br>')} />
                </div>
              </div>
            ))}
          </div>
        </div>

        <div>
          {typedForm && (
            <form class="bg-white p-8 rounded-lg shadow-lg border">
              <h3 class="text-xl font-bold mb-6">{typedForm.title}</h3>
              <div class="space-y-4">
                {typedForm.fields.map((field: FormField) => (
                  <div>
                    <label for={field.name} class="block text-sm font-medium text-gray-700 mb-2">
                      {field.label}
                    </label>
                    {field.type === 'textarea' ? (
                      <textarea
                        id={field.name}
                        name={field.name}
                        rows="4"
                        required={field.required}
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        placeholder={field.placeholder}
                      />
                    ) : (
                      <input
                        type={field.type as 'text' | 'email' | 'tel'}
                        id={field.name}
                        name={field.name}
                        required={field.required}
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      />
                    )}
                  </div>
                ))}
                <button
                  type="submit"
                  class="w-full bg-blue-600 text-white py-3 px-6 rounded-md hover:bg-blue-700 transition font-semibold"
                >
                  {typedForm.submit_button}
                </button>
              </div>
            </form>
          )}
        </div>
      </div>
    </div>
  </section>
</BaseLayout> 